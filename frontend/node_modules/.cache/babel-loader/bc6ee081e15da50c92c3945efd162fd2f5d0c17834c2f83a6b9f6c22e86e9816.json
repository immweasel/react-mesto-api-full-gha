{"ast":null,"code":"export const BASE_URL = \"http://localhost:3000\";\n\n// \"https://auth.nomoreparties.co\"\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка ${res.status} : ${res.statusText}`);\n  }\n}\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res)).then(data => {\n    if (data.token) {\n      //Сохраним токен в localStorage пользователя\n      localStorage.setItem(\"token\", data.token);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res)).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","statusText","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","data","token","localStorage","setItem","getContent","Authorization"],"sources":["C:/Users/Kira/Desktop/вёрстка/ЯП/dev/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = \"http://localhost:3000\";\n\n// \"https://auth.nomoreparties.co\"\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка ${res.status} : ${res.statusText}`);\n  }\n}\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => checkResponse(res));\n};\n\nexport const authorize  = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    })\n    .then(res => checkResponse(res))\n    .then((data) => {\n      if (data.token) {\n        //Сохраним токен в localStorage пользователя\n        localStorage.setItem(\"token\", data.token);\n        return data;\n      } \n    })\n  }; \n  \nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => checkResponse(res))\n    .then((data) => data);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;;AAE/C;;AAEA,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB,CAAC,MAAM;IACL,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,MAAKL,GAAG,CAACM,UAAW,EAAC,CAAC;EACnE;AACF;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAEhB,GAAG,IAAKD,aAAa,CAACC,GAAG,CAAC,CAAC;AACtC,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAIA,CAACT,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CACDO,IAAI,CAAChB,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/BgB,IAAI,CAAEE,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;MACzC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACJ,CAAC;AAEH,OAAO,MAAMI,UAAU,GAAIH,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEZ,QAAS,WAAU,EAAE;IACnCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCW,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CACCH,IAAI,CAAEhB,GAAG,IAAKD,aAAa,CAACC,GAAG,CAAC,CAAC,CACjCgB,IAAI,CAAEE,IAAI,IAAKA,IAAI,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}